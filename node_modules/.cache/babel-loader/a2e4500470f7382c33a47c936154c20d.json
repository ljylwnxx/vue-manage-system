{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n//\n//\n//\n//\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Echarts\",\n  props: {\n    chartType: {\n      type: String,\n      required: true\n    },\n    chartData: {\n      type: Object,\n      default: function _default() {\n        return {\n          xData: [],\n          series: []\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      echart: null,\n      options: null,\n      // 折线图 柱状图\n      defaultOption: {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\", \"#5ab1ef\", \"#ffb980\", \"#d87a80\", \"#8d98b3\"],\n        series: []\n      },\n      //   饼状图\n      pieOption: {\n        tooltip: {\n          trigger: \"item\"\n        },\n        color: [\"#0f78f4\", \"#dd536b\", \"#9462e5\", \"#a6a6a6\", \"#e1bb22\", \"#39c362\", \"#3ed1cf\"],\n        series: []\n      }\n    };\n  },\n  watch: {\n    chartData: {\n      handler: function handler() {\n        this.initChart();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    initChart: function initChart() {\n      this.initChartData(); //   如果echart已经渲染过直接修改options，首次渲染则进行赋值和界面绘制\n\n      if (this.echart) {\n        this.echart.setOption(this.options);\n      } else {\n        this.echart = echarts.init(this.$refs.echarts);\n        this.echart.setOption(this.options);\n      }\n    },\n    initChartData: function initChartData() {\n      if (['line', 'bar'].includes(this.chartType)) {\n        this.defaultOption.xAxis.data = this.chartData.xData;\n        this.defaultOption.series = this.chartData.series;\n        this.options = this.defaultOption;\n      } else {\n        this.pieOption.series = this.chartData.series;\n        this.options = this.pieOption;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAKA;AACA;AACAA,iBADA;AAEAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAG,aAFA,sBAEA;AACA;AACAC,mBADA;AAEAC;AAFA;AAIA;AAPA;AALA,GAFA;AAiBAC,MAjBA,kBAiBA;AACA;AACAC,kBADA;AAEAC,mBAFA;AAGA;AACAC;AACAC;AACA;AACAC;AACAC;AADA;AAFA,SADA;AAOAC;AACAC;AADA,SAPA;AAUA;AACAC;AACAC;AADA,SAXA;AAcAC;AACAjB,0BADA;AACA;AACAM,kBAFA;AAGAY;AACAC;AACAP;AADA;AADA,WAHA;AAQAQ;AACAC,uBADA;AAEAT;AAFA;AARA,SAdA;AA2BAU,gBACA;AACAtB,uBADA;AAEAkB;AACAC;AACAP;AADA;AADA;AAFA,SADA,CA3BA;AAqCAA,gBACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,CArCA;AA6CAP;AA7CA,OAJA;AAmDA;AACAkB;AACAR;AACAC;AADA,SADA;AAIAJ,gBACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAJA;AAaAP;AAbA;AApDA;AAoEA,GAtFA;AAuFAmB;AACAtB;AACAuB,aADA,qBACA;AACA;AACA,OAHA;AAIAC;AAJA;AADA,GAvFA;AA+FAC;AACAC,aADA,uBACA;AACA,2BADA,CAEA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KAVA;AAWAC,iBAXA,2BAWA;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AAEA;AAEA;AAtBA;AA/FA","names":["name","props","chartType","type","required","chartData","default","xData","series","data","echart","options","defaultOption","legend","textStyle","color","grid","left","tooltip","trigger","xAxis","axisLine","lineStyle","axisLabel","interval","yAxis","pieOption","watch","handler","deep","methods","initChart","initChartData"],"sourceRoot":"src/components","sources":["Echarts.vue"],"sourcesContent":["<template>\n  <div ref=\"echarts\"></div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Echarts\",\n  props: {\n    chartType: {\n      type: String,\n      required: true,\n    },\n    chartData: {\n      type: Object,\n      default() {\n        return {\n          xData: [],\n          series:[]\n        };\n      },\n    },\n  },\n  data() {\n    return {\n        echart:null,\n        options:null,\n    // 折线图 柱状图\n      defaultOption: {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\",\n          },\n        },\n        grid: {\n          left: \"20%\",\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          type: \"category\", // 类目轴\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\",\n            },\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\",\n          },\n        },\n        yAxis: [\n          {\n            type: \"value\",\n            axisLine: {\n              lineStyle: {\n                color: \"#17b3a3\",\n              },\n            },\n          },\n        ],\n        color: [\n          \"#2ec7c9\",\n          \"#b6a2de\",\n          \"#5ab1ef\",\n          \"#ffb980\",\n          \"#d87a80\",\n          \"#8d98b3\",\n        ],\n        series: [],\n      },\n    //   饼状图\n      pieOption: {\n        tooltip: {\n          trigger: \"item\",\n        },\n        color: [\n          \"#0f78f4\",\n          \"#dd536b\",\n          \"#9462e5\",\n          \"#a6a6a6\",\n          \"#e1bb22\",\n          \"#39c362\",\n          \"#3ed1cf\",\n        ],\n        series: [],\n      },\n    };\n  },\n  watch: {\n      chartData:{\n          handler(){\n              this.initChart()\n          },\n          deep:true\n      }\n  },\n  methods: {\n      initChart(){\n          this.initChartData()\n        //   如果echart已经渲染过直接修改options，首次渲染则进行赋值和界面绘制\n          if(this.echart){\n              this.echart.setOption(this.options)\n          }else{\n              this.echart = echarts.init(this.$refs.echarts)\n              this.echart.setOption(this.options)\n          }\n      },\n      initChartData(){\n          if(['line','bar'].includes(this.chartType)){\n              this.defaultOption.xAxis.data = this.chartData.xData\n              this.defaultOption.series = this.chartData.series\n              this.options = this.defaultOption\n          }else{\n              this.pieOption.series = this.chartData.series\n              this.options = this.pieOption\n\n          }\n\n      }\n  }\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}