{"ast":null,"code":"//\n//\n//\n//\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Echarts\",\n  data: function data() {\n    return {\n      //饼图\n      normalOption: {\n        tooltip: {\n          trigger: \"item\"\n        },\n        color: [\"#0f78f4\", \"#dd536b\", \"#9462e5\", \"#a6a6a6\", \"#e1bb22\", \"#39c362\", \"#3ed1cf\"],\n        series: []\n      },\n      axisOption: {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: []\n      },\n      echart: null\n    };\n  },\n  props: {\n    //折线图和柱状图有X轴 饼状图没有\n    isAxisChart: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      default: function _default() {\n        return {\n          xData: [],\n          series: []\n        };\n      }\n    }\n  },\n  //对传入的数据进行监听  当数据发生变化的时候echart需要重新绘制\n  watch: {\n    chartData: {\n      handler: function handler() {\n        this.initChart();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    initChart: function initChart() {\n      this.initChartData(); //判断当前的echat是否被渲染\n\n      if (this.echart) {\n        this.echart.setOption(this.options);\n      } else {\n        this.echart = echarts.init(this.$refs.echart);\n        this.echart.setOption(this.options);\n      }\n    },\n    initChartData: function initChartData() {\n      //判断图的类型\n      if (this.isAxisChart) {\n        this.axisOption.xAxis.data = this.chartData.xData;\n        this.axisOption.series = this.chartData.series;\n      } else {\n        //饼状图没有Xaxis数据\n        this.normalOption.series = this.chartData.series;\n      }\n    }\n  },\n  computed: {\n    options: function options() {\n      return this.isAxisChart ? this.axisOption : this.normalOption;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAKA;AACA;AACAA,iBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC;AACAC;AACAC;AADA,SADA;AAIAC,gBACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAJA;AAaAC;AAbA,OAFA;AAiBAC;AACAC;AACA;AACAC;AACAJ;AADA;AAFA,SADA;AAOAK;AACAC;AADA,SAPA;AAUA;AACAR;AACAC;AADA,SAXA;AAcAQ;AACAC,0BADA;AACA;AACAZ,kBAFA;AAGAa;AACAC;AACAV;AADA;AADA,WAHA;AAQAW;AACAC,uBADA;AAEAZ;AAFA;AARA,SAdA;AA2BAa,gBACA;AACAL,uBADA;AAEAC;AACAC;AACAV;AADA;AADA;AAFA,SADA,CA3BA;AAqCAA,qCArCA;AAsCAC;AAtCA,OAjBA;AAyDAa;AAzDA;AA2DA,GA9DA;AA+DAC;AACA;AACAC;AACAR,mBADA;AAEAS;AAFA,KAFA;AAMAC;AACAV,kBADA;AAEAS,aAFA,sBAEA;AACA;AACAE,mBADA;AAEAlB;AAFA;AAIA;AAPA;AANA,GA/DA;AA+EA;AACAmB;AACAF;AACAG;AACA;AACA,OAHA;AAIAC;AAJA;AADA,GAhFA;AAwFAC;AACAC,aADA,uBACA;AACA,2BADA,CAEA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KAVA;AAWAC,iBAXA,2BAWA;AACA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;AApBA,GAxFA;AA8GAC;AACAC,WADA,qBACA;AACA;AACA;AAHA;AA9GA","names":["name","data","normalOption","tooltip","trigger","color","series","axisOption","legend","textStyle","grid","left","xAxis","type","axisLine","lineStyle","axisLabel","interval","yAxis","echart","props","isAxisChart","default","chartData","xData","watch","handler","deep","methods","initChart","initChartData","computed","options"],"sourceRoot":"src/components","sources":["Echarts.vue"],"sourcesContent":["<template>\n  <div ref=\"echart\"></div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Echarts\",\n  data() {\n    return {\n      //饼图\n      normalOption: {\n        tooltip: {\n          trigger: \"item\",\n        },\n        color: [\n          \"#0f78f4\",\n          \"#dd536b\",\n          \"#9462e5\",\n          \"#a6a6a6\",\n          \"#e1bb22\",\n          \"#39c362\",\n          \"#3ed1cf\",\n        ],\n        series: [],\n      },\n      axisOption: {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\",\n          },\n        },\n        grid: {\n          left: \"20%\",\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          type: \"category\", // 类目轴\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\",\n            },\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\",\n          },\n        },\n        yAxis: [\n          {\n            type: \"value\",\n            axisLine: {\n              lineStyle: {\n                color: \"#17b3a3\",\n              },\n            },\n          },\n        ],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [],\n      },\n      echart: null,\n    };\n  },\n  props: {\n    //折线图和柱状图有X轴 饼状图没有\n    isAxisChart: {\n      type: Boolean,\n      default: true,\n    },\n    chartData: {\n      type: Object,\n      default() {\n        return {\n          xData: [],\n          series: [],\n        };\n      },\n    },\n  },\n  //对传入的数据进行监听  当数据发生变化的时候echart需要重新绘制\n  watch: {\n    chartData: {\n      handler: function () {\n        this.initChart();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    initChart() {\n      this.initChartData();\n      //判断当前的echat是否被渲染\n      if (this.echart) {\n        this.echart.setOption(this.options);\n      } else {\n        this.echart = echarts.init(this.$refs.echart);\n        this.echart.setOption(this.options);\n      }\n    },\n    initChartData() {\n      //判断图的类型\n      if (this.isAxisChart) {\n        this.axisOption.xAxis.data = this.chartData.xData;\n        this.axisOption.series = this.chartData.series;\n      } else {\n        //饼状图没有Xaxis数据\n        this.normalOption.series = this.chartData.series;\n      }\n    },\n  },\n  computed: {\n    options() {\n      return this.isAxisChart ? this.axisOption : this.normalOption;\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}