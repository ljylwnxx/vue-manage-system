{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Cookie from \"js-cookie\"; // import router from \"../router\"\n\nexport default {\n  state: {\n    isCollapse: false,\n    tabsList: [{\n      path: '/',\n      name: 'home',\n      label: '首页',\n      icon: 'home'\n    }],\n    // 记录路由和高亮的对应关系\n    currentMenu: null,\n    menu: []\n  },\n  mutations: {\n    collapseMenu: function collapseMenu(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    // 用于改变state中的tabsList数组\n    selectMenu: function selectMenu(state, val) {\n      if (val.name !== 'home') {\n        state.currentMenu = val; //拿到当前选中项是否在tags中\n\n        var result = state.tabsList.findIndex(function (item) {\n          return item.name === val.name;\n        });\n\n        if (result === -1) {\n          //不存在\n          state.tabsList.push(val);\n        } else {\n          //将选中的标识进行重置\n          state.currentMenu = null;\n        }\n      }\n    },\n    closeTag: function closeTag(state, val) {\n      //找到当前点击的val(tag)所对应的index来删除该数据\n      var result = state.tabsList.findIndex(function (item) {\n        return item.name === val.name;\n      });\n      state.tabsList.splice(result, 1);\n    },\n    setMenu: function setMenu(state, val) {\n      state.menu = val; //将menu缓存到coolie中 避免在刷新页面的时候丢失menu\n\n      Cookie.set(\"menu\", JSON.stringify(val));\n    },\n    clearMenu: function clearMenu(state) {\n      state.menu = [];\n      Cookie.remove(\"menu\");\n    },\n    addMenu: function addMenu(state, router) {\n      if (!Cookie.get(\"menu\")) {\n        return;\n      }\n\n      var menu = JSON.parse(Cookie.get(\"menu\"));\n      state.menu = menu; //对拿到的menu进行处理\n\n      var menuArray = []; //menu中包括以及及二级菜单\n\n      menu.forEach(function (item) {\n        //处理二级菜单\n        if (item.children) {\n          console.log(item.children);\n          item.children = item.children.map(function (item) {\n            //动态添加路由\n            item.component = function () {\n              return import(\"views/\".concat(item.url));\n            };\n\n            return item;\n          });\n          menuArray.push.apply(menuArray, _toConsumableArray(item.children));\n        } else {\n          item.component = function () {\n            return import(\"views/\".concat(item.url));\n          };\n\n          menuArray.push(item);\n        }\n      }); //实现路由的动态添加\n\n      menuArray.forEach(function (item) {\n        console.log(router);\n        router.addRoute('Main', item);\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/admin/Desktop/web-ele-ui/vue-manage/src/store/tab.js"],"names":["Cookie","state","isCollapse","tabsList","path","name","label","icon","currentMenu","menu","mutations","collapseMenu","selectMenu","val","result","findIndex","item","push","closeTag","splice","setMenu","set","JSON","stringify","clearMenu","remove","addMenu","router","get","parse","menuArray","forEach","children","console","log","map","component","url","addRoute"],"mappings":"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","sourcesContent":["import Cookie from \"js-cookie\"\n// import router from \"../router\"\nexport default {\n    state: {\n        isCollapse: false,\n        tabsList: [\n            {\n                path: '/',\n                name: 'home',\n                label: '首页',\n                icon: 'home'\n            }\n        ],\n        // 记录路由和高亮的对应关系\n        currentMenu: null,\n        menu: []\n    },\n    mutations: {\n        collapseMenu(state) {\n            state.isCollapse = !state.isCollapse\n        },\n        // 用于改变state中的tabsList数组\n        selectMenu(state, val) {\n            if (val.name !== 'home') {\n                state.currentMenu = val\n                //拿到当前选中项是否在tags中\n                const result = state.tabsList.findIndex(item => item.name === val.name)\n                if (result === -1) {//不存在\n                    state.tabsList.push(val)\n                } else {\n                    //将选中的标识进行重置\n                    state.currentMenu = null;\n                }\n            }\n\n        },\n        closeTag(state, val) {\n            //找到当前点击的val(tag)所对应的index来删除该数据\n            const result = state.tabsList.findIndex(item => item.name === val.name)\n            state.tabsList.splice(result, 1)\n\n        },\n        setMenu(state, val) {\n            state.menu = val\n            //将menu缓存到coolie中 避免在刷新页面的时候丢失menu\n            Cookie.set(\"menu\", JSON.stringify(val))\n        },\n        clearMenu(state) {\n            state.menu = []\n            Cookie.remove(\"menu\")\n        },\n        addMenu(state, router) {\n\n            if (!Cookie.get(\"menu\")) {\n                return\n            }\n            const menu = JSON.parse(Cookie.get(\"menu\"))\n            state.menu = menu\n            //对拿到的menu进行处理\n            const menuArray = []\n            //menu中包括以及及二级菜单\n            menu.forEach(item => {\n                //处理二级菜单\n                if (item.children) {\n                    console.log(item.children);\n                    item.children = item.children.map(item => {\n                        //动态添加路由\n                        item.component = () => import(`views/${item.url}`)\n                        return item\n                    })\n                    menuArray.push(...item.children)\n                } else {\n                    item.component = () => import(`views/${item.url}`)\n                    menuArray.push(item)\n                }\n            });\n            //实现路由的动态添加\n            menuArray.forEach(item => {\n                console.log(router);\n                router.addRoute('Main', item)\n            })\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}