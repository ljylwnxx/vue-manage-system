{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getData } from '../../../api/data.js';\nimport * as echarts from 'echarts';\nimport Echart from '../../components/Echarts.vue';\nimport axios from '../../../api/axios';\nexport default {\n  name: 'home',\n  components: {\n    Echart: Echart\n  },\n  data: function data() {\n    return {\n      userImg: require('../../assets/images/user.png'),\n      tableData: [],\n      tableLabel: {\n        name: \"品牌\",\n        todayBuy: \"今日购买\",\n        monthBuy: \"本月购买\",\n        totalBuy: \"总购买\"\n      },\n      countData: [{\n        name: \"今日支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }],\n      echartData: {\n        order: {\n          xData: [],\n          series: []\n        },\n        user: {\n          xData: [],\n          series: []\n        },\n        video: {\n          series: []\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$http.get('http').catch(function (res) {\n      console.log(res);\n    });\n    axios.request({\n      url: 'axios'\n    }).catch(function (res) {\n      console.log(res);\n    });\n    getData().then(function (res) {\n      var _res$data = res.data,\n          code = _res$data.code,\n          data = _res$data.data;\n\n      if (code == 20000) {\n        _this.tableData = data.tableData;\n        var order = data.orderData; // Object.keys()传入参数返回key值\n\n        var xData = order.date;\n        var keyArray = Object.keys(order.data[0]);\n        var series = [];\n        keyArray.forEach(function (key) {\n          series.push({\n            name: key,\n            data: order.data.map(function (item) {\n              return item[key];\n            }),\n            type: 'line'\n          });\n        }); // const option = {\n        //   xAxis: {\n        //     data: xData,\n        //   },\n        //   yAxis: {},\n        //   tooltip: {\n        //     trigger: \"axis\",\n        //   },\n        //   legend: {\n        //     data: keyArray,\n        //   },\n        //   series,\n        // }\n\n        _this.echartData.order.xData = xData;\n        _this.echartData.order.series = series; // const E = echarts.init(this.$refs.echarts)\n        // E.setOption(option)\n        //用户图\n        // const userOption = {\n        //   legend: {\n        //       // 图例文字颜色\n        //       textStyle: {\n        //         color: \"#333\",\n        //       },\n        //     },\n        //     grid: {\n        //       left: \"20%\",\n        //     },\n        //     // 提示框\n        //     tooltip: {\n        //       trigger: \"axis\",\n        //     },\n        //     xAxis: {\n        //       type: \"category\", // 类目轴\n        //       data: data.userData.map(item => item.date),\n        //       axisLine: {\n        //         lineStyle: {\n        //           color: \"#17b3a3\",\n        //         },\n        //       },\n        //       axisLabel: {\n        //         interval: 0,\n        //         color: \"#333\",\n        //       },\n        //     },\n        //     yAxis: [\n        //       {\n        //         type: \"value\",\n        //         axisLine: {\n        //           lineStyle: {\n        //             color: \"#17b3a3\",\n        //           },\n        //         },\n        //       },\n        //     ],\n        //     color: [\"#2ec7c9\", \"#b6a2de\"],\n        //     series: [\n        //     ],\n        // }\n\n        _this.echartData.user.xData = data.userData.map(function (item) {\n          return item.date;\n        });\n        _this.echartData.user.series = [{\n          name: '新增用户',\n          data: data.userData.map(function (item) {\n            return item.new;\n          }),\n          type: 'bar'\n        }, {\n          name: '活跃用户',\n          data: data.userData.map(function (item) {\n            return item.active;\n          }),\n          type: 'bar'\n        }], // const U = echarts.init(this.$refs.userEcharts)\n        // U.setOption(userOption)\n        //饼图\n        // const videoOption = {\n        //   tooltip: {\n        //       trigger: \"item\",\n        //     },\n        //     color: [\n        //       \"#0f78f4\",\n        //       \"#dd536b\",\n        //       \"#9462e5\",\n        //       \"#a6a6a6\",\n        //       \"#e1bb22\",\n        //       \"#39c362\",\n        //       \"#3ed1cf\",\n        //     ],\n        //     series: [\n        //       {\n        //         data: data.videoData,\n        //         type: \"pie\",\n        //       }\n        //     ]\n        // }\n        // const V = echarts.init(this.$refs.videoEcharts)\n        // V.setOption(videoOption)\n        _this.echartData.video.series = [{\n          data: data.videoData,\n          type: \"pie\"\n        }];\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACAA,cADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,sDADA;AAEAC,mBAFA;AAGAC;AACAN,kBADA;AAEAO,wBAFA;AAGAC,wBAHA;AAIAC;AAJA,OAHA;AASAC,kBACA;AACAV,sBADA;AAEAW,mBAFA;AAGAC,uBAHA;AAIAC;AAJA,OADA,EAOA;AACAb,sBADA;AAEAW,kBAFA;AAGAC,uBAHA;AAIAC;AAJA,OAPA,EAaA;AACAb,uBADA;AAEAW,mBAFA;AAGAC,uBAHA;AAIAC;AAJA,OAbA,EAmBA;AACAb,sBADA;AAEAW,mBAFA;AAGAC,uBAHA;AAIAC;AAJA,OAnBA,EAyBA;AACAb,sBADA;AAEAW,kBAFA;AAGAC,uBAHA;AAIAC;AAJA,OAzBA,EA+BA;AACAb,uBADA;AAEAW,mBAFA;AAGAC,uBAHA;AAIAC;AAJA,OA/BA,CATA;AA+CAC;AACAC;AACAC,mBADA;AAEAC;AAFA,SADA;AAKAC;AACAF,mBADA;AAEAC;AAFA,SALA;AASAE;AACAF;AADA;AATA;AA/CA;AA6DA,GAnEA;AAoEAG,SApEA,qBAoEA;AAAA;;AACA;AACAC;AACA,KAFA;AAGAC;AACAC;AADA,OAEAC,KAFA,CAEA;AACAH;AACA,KAJA;AAKAI;AACA;AAAA;AAAA;;AACA;AACA;AACA,mCAFA,CAGA;;AACA;AACA;AACA;AACAC;AACAT;AACAjB,qBADA;AAEAG;AAAA;AAAA,cAFA;AAGAwB;AAHA;AAKA,SANA,EAPA,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,+CA5BA,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;AACA,wCACA;AACA3B,sBADA;AAEAG;AAAA;AAAA,YAFA;AAGAwB;AAHA,SADA,EAMA;AAEA3B,sBAFA;AAGAG;AAAA;AAAA,YAHA;AAIAwB;AAJA,SANA,GAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCACA;AACAxB,8BADA;AAEAwB;AAFA,SADA,CAtCA;AA4CA;AACA,KA1HA;AA2HA;AAxMA","names":["name","components","Echart","data","userImg","tableData","tableLabel","todayBuy","monthBuy","totalBuy","countData","value","icon","color","echartData","order","xData","series","user","video","mounted","console","axios","url","catch","getData","keyArray","type"],"sourceRoot":"src/views/home","sources":["index.vue"],"sourcesContent":["<template>\n<el-row class=\"home\" :gutter=\"20\">\n  <el-col\n    :span=\"8\"\n    style=\"margin-top: 20px\"\n    >\n    <el-card shadow=\"hoveralways\">\n      <div class=\"user\">\n        <img :src=\"userImg\" />\n        <div class=\"userInfo\">\n          <p class=\"name\">Admin</p>\n          <p class=\"access\">超级管理员</p>\n        </div>\n      </div>\n      <div class=\"loginInfo\">\n          <p>上次登录时间：<span>2021-11-05</span></p>\n          <p>上次登录地点：<span>武汉</span></p>\n      </div>\n    </el-card>\n    <el-card style=\"margin-top: 20px; height: 460px;\">\n       <el-table\n       :data=\"tableData\"\n       >\n         <el-table-column\n          v-for=\"(val, key) in tableLabel\"\n          :prop=\"key\"\n          :label=\"val\"\n          :key=\"key\"\n         >\n        </el-table-column>\n      </el-table>\n    </el-card>    \n  </el-col>\n     <el-col style=\"margin-top: 20px\" :span=\"16\">\n         <div class=\"num\">\n           <el-card\n            v-for=\"item in countData\"\n            :key=\"item.name\"\n            :body-style=\"{ padding: 0, display: 'flex' }\"\n            >\n            <i\n            class=\"icon\"\n            :class=\"`el-icon-${item.icon}`\"\n            :style=\"{ 'background': item.color }\"\n            >\n            </i>\n             <div class=\"detail\">\n             <p class=\"num\">￥{{ item.value }}</p>\n             <p>{{ item.name }}</p>\n            </div>\n          </el-card>\n        </div>\n        <el-card style=\"height: 280px\">\n          <!-- <div style=\"height:280px\" ref=\"echarts\"> </div> -->\n          <echart :chartData=\"echartData.order\" style=\"height:280px\" />\n        </el-card>\n        <div class=\"graph\">\n          <el-card style=\"height: 260px\">\n           <!-- <div style=\"height:240px\" ref=\"userEcharts\"></div> -->\n           <echart :chartData=\"echartData.user\" style=\"height:240px\" />\n          </el-card>\n          <el-card style=\"height: 260px\">\n           <!-- <div style=\"height:240px\" ref=\"videoEcharts\"></div> -->\n           <echart :chartData=\"echartData.video\" :isAxisChart=\"false\" style=\"height:240px\" />\n          </el-card>\n        </div>\n    </el-col>\n</el-row>  \n</template>\n\n<script>\nimport {getData} from '../../../api/data.js'\nimport * as echarts from 'echarts'\nimport Echart from '../../components/Echarts.vue'\nimport axios from '../../../api/axios'\nexport default {\n  name: 'home',\n  components: {\n   Echart\n  },\n  data () {\n    return {\n      userImg: require('../../assets/images/user.png'),\n      tableData: [],\n      tableLabel: {\n          name: \"品牌\",\n          todayBuy: \"今日购买\",\n          monthBuy: \"本月购买\",\n          totalBuy: \"总购买\",\n      },\n    countData: [\n          {\n          name: \"今日支付订单\",\n          value: 1234,\n          icon: \"success\",\n          color: \"#2ec7c9\",\n          },\n          {\n          name: \"今日收藏订单\",\n          value: 210,\n          icon: \"star-on\",\n          color: \"#ffb980\",\n          },\n          {\n          name: \"今日未支付订单\",\n          value: 1234,\n          icon: \"s-goods\",\n          color: \"#5ab1ef\",\n          },\n          {\n          name: \"本月支付订单\",\n          value: 1234,\n          icon: \"success\",\n          color: \"#2ec7c9\",\n          },\n          {\n          name: \"本月收藏订单\",\n          value: 210,\n          icon: \"star-on\",\n          color: \"#ffb980\",\n          },\n          {\n          name: \"本月未支付订单\",\n          value: 1234,\n          icon: \"s-goods\",\n          color: \"#5ab1ef\",\n          },\n    ],\n    echartData: {\n    order: {\n      xData: [],\n      series: []\n      },\n    user: {\n      xData: [],\n      series: []\n    },\n    video: {\n      series: []\n    }\n    },\n  }\n },\n  mounted() {\n      this.$http.get('http').catch((res)=>{\n        console.log(res)\n      })\n      axios.request({\n        url:'axios'\n      }).catch(res=>{\n        console.log(res)\n      })\n      getData().then( res => {\n        const { code, data } = res.data;\n        if (code == 20000) {\n        this.tableData = data.tableData;\n        const order = data.orderData;\n        // Object.keys()传入参数返回key值\n        const xData = order.date\n        const keyArray = Object.keys(order.data[0]);\n        const series = [];\n        keyArray.forEach((key) => {\n          series.push({\n            name: key,\n            data: order.data.map((item) => item[key]),\n            type: 'line',\n          })\n        })\n        // const option = {\n        //   xAxis: {\n        //     data: xData,\n        //   },\n        //   yAxis: {},\n        //   tooltip: {\n        //     trigger: \"axis\",\n        //   },\n        //   legend: {\n        //     data: keyArray,\n        //   },\n        //   series,\n        // }\n        this.echartData.order.xData = xData;\n        this.echartData.order.series = series;\n        // const E = echarts.init(this.$refs.echarts)\n        // E.setOption(option)\n        //用户图\n        // const userOption = {\n        //   legend: {\n        //       // 图例文字颜色\n        //       textStyle: {\n        //         color: \"#333\",\n        //       },\n        //     },\n        //     grid: {\n        //       left: \"20%\",\n        //     },\n        //     // 提示框\n        //     tooltip: {\n        //       trigger: \"axis\",\n        //     },\n        //     xAxis: {\n        //       type: \"category\", // 类目轴\n        //       data: data.userData.map(item => item.date),\n        //       axisLine: {\n        //         lineStyle: {\n        //           color: \"#17b3a3\",\n        //         },\n        //       },\n        //       axisLabel: {\n        //         interval: 0,\n        //         color: \"#333\",\n        //       },\n        //     },\n        //     yAxis: [\n        //       {\n        //         type: \"value\",\n        //         axisLine: {\n        //           lineStyle: {\n        //             color: \"#17b3a3\",\n        //           },\n        //         },\n        //       },\n        //     ],\n        //     color: [\"#2ec7c9\", \"#b6a2de\"],\n        //     series: [\n              \n        //     ],\n        // }\n        this.echartData.user.xData = data.userData.map(item => item.date)\n        this.echartData.user.series = [\n             {\n                name:'新增用户',\n                data:data.userData.map(item => item.new),\n                type:'bar',\n              },\n              {\n\n                name:'活跃用户',\n                data:data.userData.map(item => item.active),\n                type:'bar',\n              }\n        ],\n        // const U = echarts.init(this.$refs.userEcharts)\n        // U.setOption(userOption)\n        //饼图\n        // const videoOption = {\n        //   tooltip: {\n        //       trigger: \"item\",\n        //     },\n        //     color: [\n        //       \"#0f78f4\",\n        //       \"#dd536b\",\n        //       \"#9462e5\",\n        //       \"#a6a6a6\",\n        //       \"#e1bb22\",\n        //       \"#39c362\",\n        //       \"#3ed1cf\",\n        //     ],\n        //     series: [\n        //       {\n        //         data: data.videoData,\n        //         type: \"pie\",\n        //       }\n        //     ]\n        // }\n        // const V = echarts.init(this.$refs.videoEcharts)\n        // V.setOption(videoOption)\n        this.echartData.video.series = [\n              {\n                data: data.videoData,\n                type: \"pie\",\n              }\n            ]\n      }\n   })\n  }  \n}  \n</script>\n"]},"metadata":{},"sourceType":"module"}