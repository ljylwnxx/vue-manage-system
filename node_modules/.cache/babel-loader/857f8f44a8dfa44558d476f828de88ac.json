{"ast":null,"code":"//\n//\n//\n//\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Echarts\",\n\n  data() {\n    return {\n      //饼图\n      normalOption: {\n        tooltip: {\n          trigger: \"item\"\n        },\n        color: [\"#0f78f4\", \"#dd536b\", \"#9462e5\", \"#a6a6a6\", \"#e1bb22\", \"#39c362\", \"#3ed1cf\"],\n        series: []\n      },\n      axisOption: {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: []\n      },\n      echart: null\n    };\n  },\n\n  props: {\n    //折线图和柱状图有X轴 饼状图没有\n    isAxisChart: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n\n      default() {\n        return {\n          xData: [],\n          series: []\n        };\n      }\n\n    }\n  },\n  //对传入的数据进行监听  当数据发生变化的时候echart需要重新绘制\n  watch: {\n    chartData: {\n      handler: function () {\n        this.initChart();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    initChart() {\n      this.initChartData(); //判断当前的echat是否被渲染\n\n      if (this.echart) {\n        this.echart.setOption(this.options);\n      } else {\n        this.echart = echarts.init(this.$refs.echart);\n        this.echart.setOption(this.options);\n      }\n    },\n\n    initChartData() {\n      //判断图的类型\n      if (this.isAxisChart) {\n        this.axisOption.xAxis.data = this.chartData.xData;\n        this.axisOption.series = this.chartData.series;\n      } else {\n        //饼状图没有Xaxis数据\n        this.normalOption.series = this.chartData.series;\n      }\n    }\n\n  },\n  computed: {\n    options() {\n      return this.isAxisChart ? this.axisOption : this.normalOption;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;AAKA;AACA;EACAA,eADA;;EAEAC;IACA;MACA;MACAC;QACAC;UACAC;QADA,CADA;QAIAC,QACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,SAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,CAJA;QAaAC;MAbA,CAFA;MAiBAC;QACAC;UACA;UACAC;YACAJ;UADA;QAFA,CADA;QAOAK;UACAC;QADA,CAPA;QAUA;QACAR;UACAC;QADA,CAXA;QAcAQ;UACAC,gBADA;UACA;UACAZ,QAFA;UAGAa;YACAC;cACAV;YADA;UADA,CAHA;UAQAW;YACAC,WADA;YAEAZ;UAFA;QARA,CAdA;QA2BAa,QACA;UACAL,aADA;UAEAC;YACAC;cACAV;YADA;UADA;QAFA,CADA,CA3BA;QAqCAA,6BArCA;QAsCAC;MAtCA,CAjBA;MAyDAa;IAzDA;EA2DA,CA9DA;;EA+DAC;IACA;IACAC;MACAR,aADA;MAEAS;IAFA,CAFA;IAMAC;MACAV,YADA;;MAEAS;QACA;UACAE,SADA;UAEAlB;QAFA;MAIA;;IAPA;EANA,CA/DA;EA+EA;EACAmB;IACAF;MACAG;QACA;MACA,CAHA;MAIAC;IAJA;EADA,CAhFA;EAwFAC;IACAC;MACA,qBADA,CAEA;;MACA;QACA;MACA,CAFA,MAEA;QACA;QACA;MACA;IACA,CAVA;;IAWAC;MACA;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA;;EApBA,CAxFA;EA8GAC;IACAC;MACA;IACA;;EAHA;AA9GA","names":["name","data","normalOption","tooltip","trigger","color","series","axisOption","legend","textStyle","grid","left","xAxis","type","axisLine","lineStyle","axisLabel","interval","yAxis","echart","props","isAxisChart","default","chartData","xData","watch","handler","deep","methods","initChart","initChartData","computed","options"],"sourceRoot":"src/components","sources":["Echarts.vue"],"sourcesContent":["<template>\n  <div ref=\"echart\"></div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n  name: \"Echarts\",\n  data() {\n    return {\n      //饼图\n      normalOption: {\n        tooltip: {\n          trigger: \"item\",\n        },\n        color: [\n          \"#0f78f4\",\n          \"#dd536b\",\n          \"#9462e5\",\n          \"#a6a6a6\",\n          \"#e1bb22\",\n          \"#39c362\",\n          \"#3ed1cf\",\n        ],\n        series: [],\n      },\n      axisOption: {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\",\n          },\n        },\n        grid: {\n          left: \"20%\",\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: {\n          type: \"category\", // 类目轴\n          data: [],\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\",\n            },\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\",\n          },\n        },\n        yAxis: [\n          {\n            type: \"value\",\n            axisLine: {\n              lineStyle: {\n                color: \"#17b3a3\",\n              },\n            },\n          },\n        ],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [],\n      },\n      echart: null,\n    };\n  },\n  props: {\n    //折线图和柱状图有X轴 饼状图没有\n    isAxisChart: {\n      type: Boolean,\n      default: true,\n    },\n    chartData: {\n      type: Object,\n      default() {\n        return {\n          xData: [],\n          series: [],\n        };\n      },\n    },\n  },\n  //对传入的数据进行监听  当数据发生变化的时候echart需要重新绘制\n  watch: {\n    chartData: {\n      handler: function () {\n        this.initChart();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    initChart() {\n      this.initChartData();\n      //判断当前的echat是否被渲染\n      if (this.echart) {\n        this.echart.setOption(this.options);\n      } else {\n        this.echart = echarts.init(this.$refs.echart);\n        this.echart.setOption(this.options);\n      }\n    },\n    initChartData() {\n      //判断图的类型\n      if (this.isAxisChart) {\n        this.axisOption.xAxis.data = this.chartData.xData;\n        this.axisOption.series = this.chartData.series;\n      } else {\n        //饼状图没有Xaxis数据\n        this.normalOption.series = this.chartData.series;\n      }\n    },\n  },\n  computed: {\n    options() {\n      return this.isAxisChart ? this.axisOption : this.normalOption;\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}