{"ast":null,"code":"import _ElementUI2 from \"element-ui/lib/theme-chalk/index.css\";\nimport _ElementUI from \"element-ui/lib\";\nimport \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/core-js/modules/es.array.iterator.js\";\nimport \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/core-js/modules/es.promise.js\";\nimport \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/core-js/modules/es.object.assign.js\";\nimport \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/core-js/modules/es.promise.finally.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport './assets/less/index.less';\nimport router from './router';\nimport store from './store';\nimport http from 'axios';\nimport '../api/mock.js';\nVue.config.productionTip = false;\nVue.use(_ElementUI);\nVue.prototype.$http = http;\nVue.prototype.$confirm = MessageBox.confirm;\nVue.prototype.$message = Message; // 路由导航守卫\n\nrouter.beforeEach(function (to, from, next) {\n  // 为了防止页面刷新之后vuex丢失我们的token信息\n  store.commit('getToken');\n  var token = store.state.user.token;\n\n  if (!token && to.name !== \"login\") {\n    next({\n      name: \"login\"\n    });\n  } else if (token && to.name === \"login\") {\n    next({\n      name: \"home\"\n    });\n  } else {\n    next();\n  }\n});\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  },\n  //调用动态设置路由的方法 解决刷新白屏的问题\n  created: function created() {\n    store.commit(\"addMenu\", router);\n  }\n}).$mount('#app');","map":{"version":3,"sources":["/Users/admin/Desktop/web-ele-ui/vue-manage/src/main.js"],"names":["Vue","App","router","store","http","config","productionTip","use","prototype","$http","$confirm","MessageBox","confirm","$message","Message","beforeEach","to","from","next","commit","token","state","user","name","render","h","created","$mount"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,OAAO,sCAAP;AACA,OAAO,0BAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEAJ,GAAG,CAACK,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AACAN,GAAG,CAACO,GAAJ;AACAP,GAAG,CAACQ,SAAJ,CAAcC,KAAd,GAAsBL,IAAtB;AACAJ,GAAG,CAACQ,SAAJ,CAAcE,QAAd,GAAyBC,UAAU,CAACC,OAApC;AACAZ,GAAG,CAACQ,SAAJ,CAAcK,QAAd,GAAyBC,OAAzB,C,CAEA;;AACAZ,MAAM,CAACa,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC;AACAf,EAAAA,KAAK,CAACgB,MAAN,CAAa,UAAb;AACA,MAAMC,KAAK,GAAGjB,KAAK,CAACkB,KAAN,CAAYC,IAAZ,CAAiBF,KAA/B;;AACA,MAAI,CAACA,KAAD,IAAUJ,EAAE,CAACO,IAAH,KAAY,OAA1B,EAAmC;AACjCL,IAAAA,IAAI,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAJ;AACD,GAFD,MAEO,IAAIH,KAAK,IAAIJ,EAAE,CAACO,IAAH,KAAY,OAAzB,EAAkC;AACvCL,IAAAA,IAAI,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAJ;AACD,GAFM,MAGF;AACHL,IAAAA,IAAI;AACL;AACF,CAZD;AAcA,IAAIlB,GAAJ,CAAQ;AACNE,EAAAA,MAAM,EAANA,MADM;AAENC,EAAAA,KAAK,EAALA,KAFM;AAGNqB,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACxB,GAAD,CAAL;AAAA,GAHH;AAIN;AACAyB,EAAAA,OALM,qBAKI;AACRvB,IAAAA,KAAK,CAACgB,MAAN,CAAa,SAAb,EAAwBjB,MAAxB;AACD;AAPK,CAAR,EAQGyB,MARH,CAQU,MARV","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport './assets/less/index.less'\n\nimport router from './router'\nimport store from './store'\nimport http  from 'axios'\nimport '../api/mock.js'\n\nVue.config.productionTip = false\nVue.use(ElementUI)\nVue.prototype.$http = http\nVue.prototype.$confirm = MessageBox.confirm\nVue.prototype.$message = Message\n\n// 路由导航守卫\nrouter.beforeEach((to, from, next) => {\n  // 为了防止页面刷新之后vuex丢失我们的token信息\n  store.commit('getToken')\n  const token = store.state.user.token\n  if (!token && to.name !== \"login\") {\n    next({ name: \"login\" })\n  } else if (token && to.name === \"login\") {\n    next({ name: \"home\" })\n  }\n  else {\n    next()\n  }\n})\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n  //调用动态设置路由的方法 解决刷新白屏的问题\n  created() {\n    store.commit(\"addMenu\", router)\n  }\n}).$mount('#app')"]},"metadata":{},"sourceType":"module"}