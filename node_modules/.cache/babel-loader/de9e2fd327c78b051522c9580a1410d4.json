{"ast":null,"code":"import Mock from 'mockjs'; // 图表数据\n\nlet List = [];\nexport default {\n  getStatisticalData: () => {\n    //Mock.Random.float 产生随机数100到8000之间 保留小数 最小0位 最大0位\n    for (let i = 0; i < 7; i++) {\n      List.push(Mock.mock({\n        苹果: Mock.Random.float(100, 8000, 0, 0),\n        vivo: Mock.Random.float(100, 8000, 0, 0),\n        oppo: Mock.Random.float(100, 8000, 0, 0),\n        魅族: Mock.Random.float(100, 8000, 0, 0),\n        三星: Mock.Random.float(100, 8000, 0, 0),\n        小米: Mock.Random.float(100, 8000, 0, 0)\n      }));\n    }\n\n    return {\n      code: 20000,\n      data: {\n        // 饼图\n        videoData: [{\n          name: '小米',\n          value: 2999\n        }, {\n          name: '苹果',\n          value: 5999\n        }, {\n          name: 'vivo',\n          value: 1500\n        }, {\n          name: 'oppo',\n          value: 1999\n        }, {\n          name: '魅族',\n          value: 2200\n        }, {\n          name: '三星',\n          value: 4500\n        }],\n        // 柱状图\n        userData: [{\n          date: '周一',\n          new: 5,\n          active: 200\n        }, {\n          date: '周二',\n          new: 10,\n          active: 500\n        }, {\n          date: '周三',\n          new: 12,\n          active: 550\n        }, {\n          date: '周四',\n          new: 60,\n          active: 800\n        }, {\n          date: '周五',\n          new: 65,\n          active: 550\n        }, {\n          date: '周六',\n          new: 53,\n          active: 770\n        }, {\n          date: '周日',\n          new: 33,\n          active: 170\n        }],\n        // 折线图\n        orderData: {\n          date: ['20191001', '20191002', '20191003', '20191004', '20191005', '20191006', '20191007'],\n          data: List\n        },\n        //订单数据\n        tableData: [{\n          name: 'oppo',\n          todayBuy: 500,\n          monthBuy: 3500,\n          totalBuy: 22000\n        }, {\n          name: 'vivo',\n          todayBuy: 300,\n          monthBuy: 2200,\n          totalBuy: 24000\n        }, {\n          name: '苹果',\n          todayBuy: 800,\n          monthBuy: 4500,\n          totalBuy: 65000\n        }, {\n          name: '小米',\n          todayBuy: 1200,\n          monthBuy: 6500,\n          totalBuy: 45000\n        }, {\n          name: '三星',\n          todayBuy: 300,\n          monthBuy: 2000,\n          totalBuy: 34000\n        }, {\n          name: '魅族',\n          todayBuy: 350,\n          monthBuy: 3000,\n          totalBuy: 22000\n        }]\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","List","getStatisticalData","i","push","mock","苹果","Random","float","vivo","oppo","魅族","三星","小米","code","data","videoData","name","value","userData","date","new","active","orderData","tableData","todayBuy","monthBuy","totalBuy"],"sources":["/Users/admin/Desktop/vue-manage-system 2/api/mockServeData/home.js"],"sourcesContent":["import Mock from 'mockjs'\n\n// 图表数据\nlet List = []\nexport default {\n    getStatisticalData: () => {\n        //Mock.Random.float 产生随机数100到8000之间 保留小数 最小0位 最大0位\n        for (let i = 0; i < 7; i++) {\n            List.push(\n                Mock.mock({\n                    苹果: Mock.Random.float(100, 8000, 0, 0),\n                    vivo: Mock.Random.float(100, 8000, 0, 0),\n                    oppo: Mock.Random.float(100, 8000, 0, 0),\n                    魅族: Mock.Random.float(100, 8000, 0, 0),\n                    三星: Mock.Random.float(100, 8000, 0, 0),\n                    小米: Mock.Random.float(100, 8000, 0, 0)\n                })\n            )\n        }\n        return {\n            code: 20000,\n            data: {\n                // 饼图\n                videoData: [\n                    {\n                        name: '小米',\n                        value: 2999\n                    },\n                    {\n                        name: '苹果',\n                        value: 5999\n                    },\n                    {\n                        name: 'vivo',\n                        value: 1500\n                    },\n                    {\n                        name: 'oppo',\n                        value: 1999\n                    },\n                    {\n                        name: '魅族',\n                        value: 2200\n                    },\n                    {\n                        name: '三星',\n                        value: 4500\n                    }\n                ],\n                // 柱状图\n                userData: [\n                    {\n                        date: '周一',\n                        new: 5,\n                        active: 200\n                    },\n                    {\n                        date: '周二',\n                        new: 10,\n                        active: 500\n                    },\n                    {\n                        date: '周三',\n                        new: 12,\n                        active: 550\n                    },\n                    {\n                        date: '周四',\n                        new: 60,\n                        active: 800\n                    },\n                    {\n                        date: '周五',\n                        new: 65,\n                        active: 550\n                    },\n                    {\n                        date: '周六',\n                        new: 53,\n                        active: 770\n                    },\n                    {\n                        date: '周日',\n                        new: 33,\n                        active: 170\n                    }\n                ],\n                // 折线图\n                orderData: {\n                    date: ['20191001', '20191002', '20191003', '20191004', '20191005', '20191006', '20191007'],\n                    data: List\n                },\n                //订单数据\n                tableData: [\n                    {\n                        name: 'oppo',\n                        todayBuy: 500,\n                        monthBuy: 3500,\n                        totalBuy: 22000\n                    },\n                    {\n                        name: 'vivo',\n                        todayBuy: 300,\n                        monthBuy: 2200,\n                        totalBuy: 24000\n                    },\n                    {\n                        name: '苹果',\n                        todayBuy: 800,\n                        monthBuy: 4500,\n                        totalBuy: 65000\n                    },\n                    {\n                        name: '小米',\n                        todayBuy: 1200,\n                        monthBuy: 6500,\n                        totalBuy: 45000\n                    },\n                    {\n                        name: '三星',\n                        todayBuy: 300,\n                        monthBuy: 2000,\n                        totalBuy: 34000\n                    },\n                    {\n                        name: '魅族',\n                        todayBuy: 350,\n                        monthBuy: 3000,\n                        totalBuy: 22000\n                    }\n                ]\n            }\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}