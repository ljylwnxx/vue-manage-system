{"ast":null,"code":"import _objectSpread from \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/admin/Desktop/web-ele-ui/vue-manage/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from \"axios\";\nimport config from \"../config\";\nvar baseUrl = process.env.NODE_ENV === \"development\" ? config.baseUrl.dev : config.baseUrl.pro;\n\nvar HttpRequset = /*#__PURE__*/function () {\n  function HttpRequset(baseUrl) {\n    _classCallCheck(this, HttpRequset);\n\n    this.baseUrl = baseUrl;\n  }\n\n  _createClass(HttpRequset, [{\n    key: \"getInsideConfig\",\n    value: function getInsideConfig() {\n      var config = {\n        baseUrl: this.baseUrl,\n        header: {}\n      };\n      return config;\n    } // 拦截器\n\n  }, {\n    key: \"interceptors\",\n    value: function interceptors(instance) {\n      // 请求拦截器\n      instance.interceptors.request.use(function (config) {\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      }); // 相应拦截器\n\n      instance.interceptors.response.use(function (config) {\n        return config;\n      }, function (error) {\n        console.log(error, 'error');\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      // 创建实例\n      var instance = axios.create(); // 解构配置\n\n      options = _objectSpread(_objectSpread({}, this.getInsideConfig()), options); // 调用拦截器\n\n      this.interceptors(instance);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequset;\n}();\n\nexport default new HttpRequset(baseUrl);","map":{"version":3,"sources":["/Users/admin/Desktop/web-ele-ui/vue-manage/api/axios.js"],"names":["axios","config","baseUrl","process","env","NODE_ENV","dev","pro","HttpRequset","header","instance","interceptors","request","use","error","Promise","reject","response","console","log","options","create","getInsideConfig"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCJ,MAAM,CAACC,OAAP,CAAeI,GAAxD,GAA8DL,MAAM,CAACC,OAAP,CAAeK,GAA7F;;IAEMC,W;AACJ,uBAAYN,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACD;;;;WACD,2BAAkB;AAChB,UAAMD,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE,KAAKA,OADD;AAEbO,QAAAA,MAAM,EAAE;AAFK,OAAf;AAIA,aAAOR,MAAP;AACD,K,CACD;;;;WACA,sBAAaS,QAAb,EAAuB;AACrB;AACAA,MAAAA,QAAQ,CAACC,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAAUZ,MAAV,EAAkB;AAChB,eAAOA,MAAP;AACD,OAHH,EAIE,UAAUa,KAAV,EAAiB;AACf,eAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,OANH,EAFqB,CAUrB;;AACAJ,MAAAA,QAAQ,CAACC,YAAT,CAAsBM,QAAtB,CAA+BJ,GAA/B,CACE,UAAUZ,MAAV,EAAkB;AAChB,eAAOA,MAAP;AACD,OAHH,EAIE,UAAUa,KAAV,EAAiB;AACfI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkB,OAAlB;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,OAPH;AASD;;;WACD,iBAAQM,OAAR,EAAiB;AACf;AACA,UAAMV,QAAQ,GAAGV,KAAK,CAACqB,MAAN,EAAjB,CAFe,CAGf;;AACAD,MAAAA,OAAO,mCACF,KAAKE,eAAL,EADE,GAEFF,OAFE,CAAP,CAJe,CAQf;;AACA,WAAKT,YAAL,CAAkBD,QAAlB;AACA,aAAOA,QAAQ,CAACU,OAAD,CAAf;AACD;;;;;;AAGH,eAAe,IAAIZ,WAAJ,CAAgBN,OAAhB,CAAf","sourcesContent":["import axios from \"axios\";\n\nimport config from \"../config\";\n\nconst baseUrl = process.env.NODE_ENV === \"development\" ? config.baseUrl.dev : config.baseUrl.pro;\n\nclass HttpRequset {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n  getInsideConfig() {\n    const config = {\n      baseUrl: this.baseUrl,\n      header: {},\n    };\n    return config;\n  }\n  // 拦截器\n  interceptors(instance) {\n    // 请求拦截器\n    instance.interceptors.request.use(\n      function (config) {\n        return config;\n      },\n      function (error) {\n        return Promise.reject(error);\n      }\n    );\n    // 相应拦截器\n    instance.interceptors.response.use(\n      function (config) {\n        return config;\n      },\n      function (error) {\n        console.log(error,'error')\n        return Promise.reject(error);\n      }\n    );\n  }\n  request(options) {\n    // 创建实例\n    const instance = axios.create();\n    // 解构配置\n    options = {\n      ...this.getInsideConfig(),\n      ...options,\n    };\n    // 调用拦截器\n    this.interceptors(instance);\n    return instance(options);\n  }\n}\n\nexport default new HttpRequset(baseUrl);"]},"metadata":{},"sourceType":"module"}