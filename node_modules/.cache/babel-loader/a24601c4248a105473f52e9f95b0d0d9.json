{"ast":null,"code":"import _ElementUI2 from \"element-ui/lib/theme-chalk/index.css\";\nimport _ElementUI from \"element-ui/lib\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport './assets/less/index.less';\nimport router from './router';\nimport store from './store';\nimport http from 'axios';\nimport '../api/mock.js';\nVue.config.productionTip = false;\nVue.use(_ElementUI);\nVue.prototype.$http = http; // Vue.prototype.$confirm = MessageBox.confirm\n// Vue.prototype.$message = Message\n// 路由导航守卫\n\nrouter.beforeEach((to, from, next) => {\n  // 为了防止页面刷新之后vuex丢失我们的token信息\n  store.commit('getToken');\n  const token = store.state.user.token;\n\n  if (!token && to.name !== \"login\") {\n    next({\n      name: \"login\"\n    });\n  } else if (token && to.name === \"login\") {\n    next({\n      name: \"home\"\n    });\n  } else {\n    next();\n  }\n});\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n\n  //调用动态设置路由的方法 解决刷新白屏的问题\n  created() {\n    store.commit(\"addMenu\", router);\n  }\n\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","store","http","config","productionTip","use","prototype","$http","beforeEach","to","from","next","commit","token","state","user","name","render","h","created","$mount"],"sources":["/Users/admin/Desktop/vue-manage/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport './assets/less/index.less'\n\nimport router from './router'\nimport store from './store'\nimport http  from 'axios'\nimport '../api/mock.js'\n\nVue.config.productionTip = false\nVue.use(ElementUI)\nVue.prototype.$http = http\n// Vue.prototype.$confirm = MessageBox.confirm\n// Vue.prototype.$message = Message\n\n// 路由导航守卫\nrouter.beforeEach((to, from, next) => {\n  // 为了防止页面刷新之后vuex丢失我们的token信息\n  store.commit('getToken')\n  const token = store.state.user.token\n  if (!token && to.name !== \"login\") {\n    next({ name: \"login\" })\n  } else if (token && to.name === \"login\") {\n    next({ name: \"home\" })\n  }\n  else {\n    next()\n  }\n})\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App),\n  //调用动态设置路由的方法 解决刷新白屏的问题\n  created() {\n    store.commit(\"addMenu\", router)\n  }\n}).$mount('#app')"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,OAAO,sCAAP;AACA,OAAO,0BAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEAJ,GAAG,CAACK,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AACAN,GAAG,CAACO,GAAJ;AACAP,GAAG,CAACQ,SAAJ,CAAcC,KAAd,GAAsBL,IAAtB,C,CACA;AACA;AAEA;;AACAF,MAAM,CAACQ,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;EACpC;EACAV,KAAK,CAACW,MAAN,CAAa,UAAb;EACA,MAAMC,KAAK,GAAGZ,KAAK,CAACa,KAAN,CAAYC,IAAZ,CAAiBF,KAA/B;;EACA,IAAI,CAACA,KAAD,IAAUJ,EAAE,CAACO,IAAH,KAAY,OAA1B,EAAmC;IACjCL,IAAI,CAAC;MAAEK,IAAI,EAAE;IAAR,CAAD,CAAJ;EACD,CAFD,MAEO,IAAIH,KAAK,IAAIJ,EAAE,CAACO,IAAH,KAAY,OAAzB,EAAkC;IACvCL,IAAI,CAAC;MAAEK,IAAI,EAAE;IAAR,CAAD,CAAJ;EACD,CAFM,MAGF;IACHL,IAAI;EACL;AACF,CAZD;AAcA,IAAIb,GAAJ,CAAQ;EACNE,MADM;EAENC,KAFM;EAGNgB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACnB,GAAD,CAHR;;EAIN;EACAoB,OAAO,GAAG;IACRlB,KAAK,CAACW,MAAN,CAAa,SAAb,EAAwBZ,MAAxB;EACD;;AAPK,CAAR,EAQGoB,MARH,CAQU,MARV"},"metadata":{},"sourceType":"module"}